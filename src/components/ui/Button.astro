---
import { cva } from "class-variance-authority";
import { cn } from "@/lib/cn";
const base = import.meta.env.BASE_URL;
const { as = "button", href = "", variant = "default", size = "default", className = "", ...rest } = Astro.props as Record<string, any>;

const variants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-white/40 disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default: "bg-white text-black hover:bg-white/90",
        destructive: "bg-red-600 text-white hover:bg-red-700",
        outline: "border border-white/20 bg-transparent hover:bg-white/10 text-white",
        secondary: "bg-white/10 text-white hover:bg-white/20",
        ghost: "hover:bg-white/10 text-white",
        link: "text-white underline-offset-4 hover:underline"
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9"
      }
    },
    defaultVariants: { variant: "default", size: "default" }
  }
);

const cls = cn(variants({ variant, size }), className);
const isLink = as === "a" || (href && as !== "button");
---
{isLink ? (
  <a href={href.startsWith("/") ? `${base}${href.slice(1)}` : href} class={cls} {...rest}>
    <slot />
  </a>
) : (
  <button class={cls} {...rest}>
    <slot />
  </button>
)}
