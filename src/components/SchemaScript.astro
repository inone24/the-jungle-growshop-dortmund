---
import site from '../../content/global.json';

export interface Crumb {
  name: string;
  url: string;
}

export interface FaqItem {
  question: string;
  answer: string;
}

export interface SchemaProps {
  pageUrl?: string;
  breadcrumb?: Crumb[];
  faq?: FaqItem[];
  ogImage?: string;
}

const { pageUrl, breadcrumb = [], faq = [], ogImage } = Astro.props as SchemaProps;

const businessUrl = (pageUrl ?? 'https://inone24.github.io/the-jungle-growshop-dortmund/').trim();
const imageUrl = (ogImage ?? '/og-cover.png').trim();

const localBusiness = {
  '@context': 'https://schema.org',
  '@type': 'LocalBusiness',
  name: site.brand,
  url: businessUrl,
  telephone: site.phone_display,
  image: imageUrl,
  address: {
    '@type': 'PostalAddress',
    streetAddress: 'Eberstr. 18',
    addressLocality: 'Dortmund',
    postalCode: '44145',
    addressCountry: 'DE'
  },
  openingHoursSpecification: [
    {
      '@type': 'OpeningHoursSpecification',
      dayOfWeek: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],
      opens: '10:00',
      closes: '20:00'
    }
  ]
};

const breadcrumbSchema = breadcrumb.length
  ? [
      {
        '@context': 'https://schema.org',
        '@type': 'BreadcrumbList',
        itemListElement: breadcrumb.map((crumb, index) => ({
          '@type': 'ListItem',
          position: index + 1,
          name: crumb.name,
          item: crumb.url.trim()
        }))
      }
    ]
  : [];

const faqSchema = faq.length
  ? [
      {
        '@context': 'https://schema.org',
        '@type': 'FAQPage',
        mainEntity: faq.map((entry) => ({
          '@type': 'Question',
          name: entry.question,
          acceptedAnswer: {
            '@type': 'Answer',
            text: entry.answer
          }
        }))
      }
    ]
  : [];

const schemas = [localBusiness, ...breadcrumbSchema, ...faqSchema];
const json = JSON.stringify(schemas, null, 2);
---

<script type="application/ld+json" set:html={json}></script>
